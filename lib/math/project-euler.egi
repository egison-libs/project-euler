;;;;;
;;;;; Functions to solve Project Euler
;;;;;

(define $sum-of-positive-divisors
  (lambda [$n]
    (foldl * 1 (map (lambda [$p $c] (/ (- (power p (+ c 1)) 1) (- p 1))) (frequency (p-f n))))))

(define $sum-of-proper-divisors
  (lambda [$n]
    (- (sum-of-positive-divisors n) n)))

(define $num-to-digits
  (lambda [$n]
    (map 1#(read (pack {%1})) (unpack (show n)))))
  
(define $digits-to-num
  (lambda [$ns]
    (sum (map2 2#(* %1 (power 10 %2)) (reverse ns) (take (length ns) nats0)))))
  